$version 0.3.1
Initial release leveraging contact addresses and locations with ability to support SMC 6.1
Fix issue related to loading an engine when using the wrong engine name but still matching on non-engine type elements
Management and Log Server objects with contact addresses
Expose sub-interface view for physical interfaces

$version 0.3.2
Add VPNCertificate, Alias, Snapshot
Exceptions around node and engine actions
Moved engine/node/engines to smc.core.engine, smc.core.node, smc.core.engines
Fix timeout on session constructor to backend requests

$version 0.3.3
Rewrote web api to simplify
IPList implemented
SMCRequest wrapper around CRUD operations
Added unicode utf-8 decoding at the inbound SMC API border
Factor out modify_attribute on specific classes and implement ModifiableMixin
Change smc.actions.search.element_info_as_json to return list in case of multiple returns
Node takes meta data
Add permissions method on engine node for SMC API >= 6.1
Doc fixes

$version 0.3.4
SMCElement parent class rewritten to support lazy loading of elements
smc.elements.element.* classes use consistent create classmethod, allowing objects to be loaded in main constructor
added search methods to find name based on href
added methods for managing group members

$version 0.3.5
Add IPv6 support for creating Host, Network and Router objects
Unicode mixin for classes that print via __str__ 
Rewrite of policy classes and move to smc.policy
URL List support

$version 0.3.6
Added support for OSPF routing in smc.routing module
Support for IP Access Lists (ipv4 & ipv6)
Support for IP Prefix Lists (ipv4 & ipv6)
Expression elements

$version 0.3.7
Refactor smc.elements.element to: smc.elements.network, smc.elements.service, smc.elements.other
Search functions to find element references (smc.actions.search.element_references, smc.actions.search.element_references_as_smcresult)
SSL for SMC API connections (see smc.api.session.login)
MasterEngine Cluster support
All relevant classes now inherit from smc.base.model.Element which hold common settings and simplified methods for searching
unittest code coverage 85%

$version 0.3.8
describe_xxxx methods can take a name=<str> as well as list describe_host(name='test')
Fix some documentation referencing moved modules

$version 0.3.9
Remove ContactAddress class for function
Fix packaging requirements
First tag release

$version 0.3.10
return SMCResult from group.update_members
Fix KeyboardInterrupt triggers uninitialized result var in _make_request()
Add catch all for http methods, return unsupported method
rewrite of configloader and changed .smcrc format to better support input from external sources

$version 0.3.11
python 3.4.3 and python 3.5.1 tested successfully
misc compat fixes to support py3
unittest's - coverage = 92%

$version 0.4.0
py 2,7, 3.4 and 3.5 support

$version 0.4.1
fix version check when provided as str
minor doc fixes
add docker bootstrap for unittest automation

$version 0.4.2
dynamic destination NAT and dynamic source NAT
unittests - coverage = 93%

$version 0.4.3
element cache descriptor
api client export
locations are now directly searchable (SMC >= 6.1.1) 
unique VLANs on inline interfaces
add 'used_on' field to NAT rules
policy search_rule
unittests - coverage = 97%

$version 0.4.4
rule rewritten to support introspection and modifications, property access on interfaces
interface introspection and modifications, property access on rule elements

$version 0.4.5
validated smc 6.1.2
Ethernet rules supported in smc 6.1.2 (prior versions cause 'Database problem' error)
When aborting a policy upload and subsequently attempting to delete policy, you may get the error that there is a dependency on SMC API upload
NAT rules were previously ignored by smc validation after adding; resolved in smc 6.1.2
describe_vulnerability_type renamed to vulnerability_tag in SMC version 6.1.2
Static source NAT works and requires SMC version 6.1.2 or greater
All NAT operations should use SMC version 6.1.2
Support adding additional IP's to node and single node interfaces

$version 0.4.6
AccessControlList, IPv6Rule, IPv6NATRule, Permissions, Antispoofing, Route, License
Simplified read/write access to interface details
All SMCResult actions are wrapped in exceptions
Global metaclass registry

